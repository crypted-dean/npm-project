name: npm project main deploy

on:
  push:
    branches: [ main ]

env:
  CACHE_DIR: ${{ github.workspace }}/node_modules
  DEPLOY_BUCKET: s3://npm-project
  CLOUDFRONT_DISTRIBUTION: E192QCJD57R21K

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout source code.
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Compute dependency cache key
        id: compute_lockfile_hash
        run: echo "::set-output name=hash::${{ hashFiles('package-lock.json') }}"

      - name: Check dependency cache
        uses: actions/cache@v2
        id: cache_dependencies
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ steps.compute_lockfile_hash.outputs.hash }}

      - name: Install dependencies
        if: steps.cache_dependencies.outputs.cache-hit == ''
        run: npm ci

      - name: Run build
        run: npm run build

      - name: AWS configure credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Copy files to production bucket
        run: aws s3 sync build ${{ env.DEPLOY_BUCKET }} --cache-control 'max-age=10, must-revalidate, public'

      - name: Invalidate cloudfront
        run: aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION }} --paths /* --no-cli-pager